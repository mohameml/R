# type
a <- 2
a
a <- "sidi"
a
i <- NAN
i <- NaN
i
type(i)
class(i)
as.logical(0)
as.logical(1)
as.logical("TRUE")
as.logical("TRE")
as.logical("Bonjour")
as.logical("T")
concatenation <- paste("sidi", "bonjour" , sep =" ") # sep pour la séparation
concatenation
#
# Création d'un vecteur avec des valeurs manquantes
mon_vecteur <- c(1, 2, NA, 4, NA, 6)
# Utilisation de is.na pour vérifier les valeurs manquantes
resultat <- is.na(mon_vecteur)
print(resultat)
nb_valeurs_manquantes <- sum(is.na(mon_vecteur))
print(nb_valeurs_manquantes)
mon_vecteur <- c(1, 2, NA, 4, NA, 6)
# Utilisation de sum() avec na.rm = TRUE pour exclure les valeurs manquantes
resultat_sans_na <- sum(mon_vecteur, na.rm = TRUE)
print(resultat_sans_na)
# Utilisation de sum() avec na.rm = TRUE pour exclure les valeurs manquantes
resultat_sans_na <- sum(mon_vecteur)
print(resultat_sans_na)
letters
letters[1:4]
LETTERS
v <- c(1,2,3)
v
append(v ,4)
v
## Q1 :
2^5
## Q2 :
stock.prices <- c(3,27,23,21,34)
stock.prices
## Q2 :
stock.prices <- c(23,27,23,21,34)
stock.prices
## Q3
names(stock.prices) <- c("Mon" ,"Tues" , "Wed" , "Thu" , "Fri")
stock.prices
## Q4 : mean
moyenne <- mean(stock.prices)
moyenne
over.23 <- stock.prices[x > 23]
over.23 <- stock.prices[stock.prices > 23]
over.23
day_max <- max(stock.prices)
day_max
max <- max(stock.prices)
max
day <- stock.prices[stock.prices == max]
day
days
days <- stock.prices[stock.prices == max]
days
as.logical("T")
vec <- 1:9
matr <- matrix(vec , nrow = 3 )
print(matr)
matr <- matrix(vec , nrow = 3 , byrow = TRUE)
print(matr)
# Création d'un vecteur
vec <- c(3, 7, 11)
# Création d'une matrice avec le vecteur comme colonne
ma_matrice <- matrix(vec)
print(ma_matrice) # une matrice de taille 3*1
vec <- 1:9
matr <- matrix(vec , nrow=4 )
matr
goog <- c(452 , 430 , 4000 ,400,410 )
msfc <- c(200 , 210 , 150 , 140 , 400)
data <- matrix(c(goog , msfc) , nrow = 2 , byrow = TRUE)
print(data)
colnames(data) <- c("MOn" , "Tues" ,"Wond" , "Thrues" , "Fri")
rownames(data) <- c("Google" , "MFSC")
print(data)
colnames(data)
# section 2
mat <- matrix(1:25 , byrow = T , nrow = 5)
print(mat)
mat
mat *2
mat /2
mat ^2
1/mat
mat > 15
mat[mat>15]
mat + mat
mat/mat
mat
mat*mat
mat %*% mat
# section 3:
goog <- c(452 , 430 , 400 ,400,410 )
msfc <- c(200 , 210 , 150 , 140 , 400)
data <- matrix(c(goog , msfc) , nrow = 2 , byrow = TRUE)
print(data)
colnames(data) <- c("MOn" , "Tues" ,"Wond" , "Thrues" , "Fri")
rownames(data) <- c("Google" , "MFSC")
print(data)
FB <- c(110 , 10 , 0 , 130 100)
data <- rbind(data , FB )
FB <- c(110 , 10 , 0 , 130 100)
data <- rbind(data , FB )
FB <- c(110 , 10 , 0 , 130 ,100)
data <- rbind(data , FB )
print(data)
avg <- rowMeans(data)
avg
data <- cbind(data , avg)
print(data)
print(data)
summary(data)
data
cor(data)
data
colSums(data)
rowSums(data)
mat <- matrix(1:9 , nrow = 3 , byrow = T)
mat
t(mat)
det(mat)
solve(mat)
solve(mat)
mat_i <- solve(mat)
mat_i
vec <- c(1 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 1)
length(vec)
I <- matrix(vec , nrow = 3 , byrow= T)
I
solve(I)
print(eigen(I)$values)
print(eigen(I)$vectors)
mat <- matrix(1:50 , nrow =5 ,byrow=T)
mat
print(mat[1,7])
#mat[i,]
print(mat[1,])
#mat[,k]
print(mat[,5])
# mat[i:j, ]
prin(mat[1:3 ,])
# mat[i:j, ]
print(mat[1:3 ,])
# mat[i:j, ]
print(mat[1:3 ])
# mat[i:j, ]
print(mat[1:3])
# mat[i:j, ]
print(mat[,1:3])
# mat[i:j, ]
print(mat[1:3 ,])
# mat[, i:j]
print(mat[,1:3])
mat
mat[3:4 , 6:7]
# mat[c(i1, i2) , c(j1 ,j2)]
mat[c(1, 2), c(1,2)]
# mat[c(i1, i2) , c(j1 ,j2)]
mat[c(1, 2), c(3,4)]
# mat[c(i1, i2) , c(j1 ,j2)]
mat[c(1, 2), c(3,4)]
mat
# mat[c(i1, i2) , c(j1 ,j2)]
mat[c(1, 2), c(3,6)]
